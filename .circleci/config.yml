version: 2.1
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.4-node-browsers
      - image: circleci/mysql:8.0.17
        command: mysqld --default-authentication-plugin=mysql_native_password
    environment:
      - APP_DEBUG: true
      - APP_ENV: testing
      - APP_KEY: base64:oXcJUWyOyM7lEV9lRjNmfLSP8d+wMyQ5HKLoyThB/9I=
      - DB_CONNECTION: circle_test
      - MYSQL_ALLOW_EMPTY_PASSWORD: true

    working_directory: ~/repo

    steps:
      - checkout
      
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1

      # Install PHP Extension
      - run:
          name: Install PHP Extensions
          command: sudo docker-php-ext-install pdo_mysql

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: composer install
          command: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m

      # run seeding
      - run:
          name: Migration & Seeding
          command: php artisan migrate --seed

      # run unit test
      - run:
          name: Unittest
          command: ./vendor/bin/phpunit